@startuml

title __DATAMODEL's Class Diagram__\n

  namespace com.example.demo {
    namespace datamodel {
      class com.example.demo.datamodel.AddressConverter {
          {static} - SEPARATOR : String
          + convertToDatabaseColumn()
          + convertToEntityAttribute()
      }
    }
  }
  

  namespace com.example.demo {
    namespace datamodel {
      class com.example.demo.datamodel.AddressJpa {
          - city : String
          - countryCode : String
          - id : long
          - postalCode : String
          - street : String
          + AddressJpa()
          + AddressJpa()
          + equals()
          + getCity()
          + getCountryCode()
          + getId()
          + getPerson()
          + getPostalCode()
          + getStreet()
          + hashCode()
          + setCity()
          + setCountryCode()
          + setId()
          + setPerson()
          + setPostalCode()
          + setStreet()
          + toString()
          # canEqual()
      }
    }
  }
  

  namespace com.example.demo {
    namespace datamodel {
      class com.example.demo.datamodel.AdminJpa {
          + AdminJpa()
          + AdminJpa()
          + AdminJpa()
          + getId()
          + getPersonId()
          + toString()
      }
    }
  }
  

  namespace com.example.demo {
    namespace datamodel {
      class com.example.demo.datamodel.AdminJpa.GroupPersonIdJpa {
          {static} - serialVersionUID : long
          + GroupPersonIdJpa()
          + GroupPersonIdJpa()
          + equals()
          + getGroupJpa()
          + getPersonId()
          + hashCode()
          # canEqual()
      }
    }
  }
  

  namespace com.example.demo {
    namespace datamodel {
      class com.example.demo.datamodel.CountryJpa {
          - code : String
          - name : String
          + CountryJpa()
          + getCode()
          + getName()
          # CountryJpa()
      }
    }
  }
  

  namespace com.example.demo {
    namespace datamodel {
      class com.example.demo.datamodel.GroupJpa {
          - administrators : List<AdminJpa>
          {static} - log : Logger
          - name : String
          + GroupJpa()
          + GroupJpa()
          + GroupJpa()
          + addAdministrator()
          + getAdministrators()
          + getId()
          + getName()
          + removeAdministrator()
          + toString()
      }
    }
  }
  

  namespace com.example.demo {
    namespace datamodel {
      class com.example.demo.datamodel.PersonJpa {
          - addresses : List<AddressJpa>
          - email : String
          - firstName : String
          - lastName : String
          - password : String
          - roles : Set<RoleJpa>
          - username : String
          + PersonJpa()
          + PersonJpa()
          + PersonJpa()
          + equals()
          + getAddresses()
          + getEmail()
          + getFirstName()
          + getId()
          + getLastName()
          + getPassword()
          + getRoles()
          + getUsername()
          + hashCode()
          + setAddresses()
          + setEmail()
          + setFirstName()
          + setId()
          + setLastName()
          + setPassword()
          + setRoles()
          + setUsername()
          + toString()
          # canEqual()
      }
    }
  }
  

  namespace com.example.demo {
    namespace datamodel {
      class com.example.demo.datamodel.RoleJpa {
          + RoleJpa()
          + RoleJpa()
          + RoleJpa()
          + getId()
          + getName()
          + setId()
          + setName()
      }
    }
  }
  

  com.example.demo.datamodel.AddressConverter .up.|> javax.persistence.AttributeConverter
  com.example.demo.datamodel.AddressJpa o-- com.example.demo.datamodel.PersonJpa : person
  com.example.demo.datamodel.AdminJpa o-- com.example.demo.datamodel.AdminJpa.GroupPersonIdJpa : id
  com.example.demo.datamodel.AdminJpa +-down- com.example.demo.datamodel.AdminJpa.GroupPersonIdJpa
  com.example.demo.datamodel.AdminJpa.GroupPersonIdJpa .up.|> java.io.Serializable
  com.example.demo.datamodel.AdminJpa.GroupPersonIdJpa o-- com.example.demo.datamodel.GroupJpa : groupJpa
  com.example.demo.datamodel.AdminJpa.GroupPersonIdJpa o-- com.example.demo.domain.valueobjects.PersonId : personId
  com.example.demo.datamodel.GroupJpa o-- com.example.demo.domain.valueobjects.GroupId : id
  com.example.demo.datamodel.PersonJpa o-- com.example.demo.domain.valueobjects.PersonId : id
  com.example.demo.datamodel.RoleJpa o-- com.example.demo.domain.valueobjects.RoleId : id
  com.example.demo.datamodel.RoleJpa o-- com.example.demo.domain.valueobjects.ERole : name


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
