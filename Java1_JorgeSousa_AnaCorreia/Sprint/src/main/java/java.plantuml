@startuml

title __JAVA's Class Diagram__\n

  namespace CentroComercial {
    class CentroComercial {
        - MORADA_OMISSAO : String
        - NOME_CENTRO_OMISSAO : String
        - lista : ArrayList<Loja>
        - morada : String
        - nomeCentroC : String
        + AdicionarLoja()
        + CriarFicheiro()
        + LerFicheiro()
        + getLista()
        + getMorada()
        + getNomeCentroC()
        + nLojas()
        + ordenarLista()
        + ordenarTipoeArea()
        + percentualAncora()
        + percentualComum()
        + removerLoja()
        + setLista()
        + setMorada()
        + setNomeCentroC()
        + totalCustoSegurancaAncora()
        + totalCustoSegurancaComum()
        + totalPagarSeguranca()
        + totalReceitas()
        + totalRendaAncora()
        + totalRendaLojasComuns()
        ~ CentroComercial()
        ~ CentroComercial()
    }
  }
  

  namespace Main  {
    class main {
        {static} + main()
    }
  }


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter


title __LOJAS's Class Diagram__\n

    namespace Lojas {
      class Lojas.Compare {
          + compare()
      }
    }

    namespace Lojas {
      interface Lojas.CustoSeguranca {
          {abstract} + custoSeguranca()
      }
    }

    namespace Lojas {
      class Lojas.Loja {
          {static} - AREA_OMISSAO : double
          {static} - NOME_OMISSAO : String
          {static} - NUM_ID_OMISSAO : int
          {static} - RECEITAS_ANO_ANTERIOR_OMISSAO : double
          - area : double
          {static} - limInferiorArea : int
          {static} - limSuperiorArea : int
          - nome : String
          - numID : int
          - receitasAnoAnterior : double
          + Loja()
          + Loja()
          + classificacaoArea()
          + compareTo()
          + equals()
          + getArea()
          {static} + getLimInferiorArea()
          {static} + getLimSuperiorArea()
          + getNome()
          + getNumID()
          + getReceitasAnoAnterior()
          + setArea()
          {static} + setLimInferiorArea()
          {static} + setLimSuperiorRenda()
          + setNome()
          + setNumID()
          + setReceitasAnoAnterior()
          + toString()
      }
    }

    namespace Lojas {
      class Lojas.LojaAncora {
          {static} - CUSTO_SEGURANCA_OMISSAO : double
          {static} - contador : int
          - custoSeguranca : double
          + LojaAncora()
          + LojaAncora()
          + custoSeguranca()
          + equals()
          {static} + getContador()
          + getCustoSeguranca()
          + setCustoSeguranca()
          + toString()
      }
    }

    namespace Lojas {
      class Lojas.LojaAncoraExterna {
          {static} - QUANTIDADE_FUNCIONARIO_OMISSAO : int
          - quantidadeFuncionario : int
          {static} - rendaFixa : double
          + LojaAncoraExterna()
          + LojaAncoraExterna()
          + LojaAncoraExterna()
          + calcRenda()
          + custoSeguranca()
          + equals()
          + getArea()
          + getQuantidadeFuncionario()
          + getReceitasAnoAnterior()
          {static} + getRendaFixa()
          + setQuantidadeFuncionario()
          {static} + setRendaFixa()
          + toString()
      }
    }

    namespace Lojas {
      class Lojas.LojaComum {
          {static} - QUANTIDADE_FUNCIONARIO_OMISSAO : int
          {static} - contador : int
          - quantidadeFuncionario : int
          + LojaComum()
          + LojaComum()
          + LojaComum()
          + equals()
          {static} + getContador()
          + getQuantidadeFuncionario()
          + setQuantidadeFuncionario()
          + toString()
      }
    }

    namespace Lojas {
      class Lojas.LojaComumQuiosque {
          {static} - renda : double
          + LojaComumQuiosque()
          + LojaComumQuiosque()
          + calcRenda()
          + getQuantidadeFuncionario()
          {static} + getRenda()
          {static} + setRenda()
          + toString()
      }
    }

    namespace Lojas {
      class Lojas.LojaComumRestauracao {
          {static} - CUSTO_MANUTENCAO_OMISSAO : double
          {static} - NUM_MESAS_OMISSAO : int
          - custoManutencao : double
          {static} - custoSegurancaPorMesa : double
          - numMesas : int
          {static} - rendaFixa : double
          + LojaComumRestauracao()
          + LojaComumRestauracao()
          + LojaComumRestauracao()
          + calcRenda()
          + custoSeguranca()
          + equals()
          + getArea()
          + getCustoManutencao()
          {static} + getCustoSegurancaPorMesa()
          + getNumMesas()
          + getQuantidadeFuncionario()
          + getReceitasAnoAnterior()
          {static} + getRendaFixa()
          + setCustoManutencao()
          {static} + setCustoSegurancaPorMesa()
          + setNumMesas()
          {static} + setRendaFixa()
          + toString()
      }
    }

    namespace Lojas {
      interface Lojas.Renda {
          {abstract} + calcRenda()
      }
    }

  Lojas.Compare .up.|> java.util.Comparator
  Lojas.Loja .up.|> java.lang.Comparable
  Lojas.LojaAncora .right.|> Lojas.CustoSeguranca
  Lojas.LojaAncora -up-|> Lojas.Loja
  Lojas.LojaAncoraExterna .up.|> Lojas.CustoSeguranca
  Lojas.LojaAncoraExterna .down.|> Lojas.Renda
  Lojas.LojaAncoraExterna -up-|> Lojas.LojaAncora
  Lojas.LojaComum -up-|> Lojas.Loja
  Lojas.LojaComumQuiosque .down.|> Lojas.Renda
  Lojas.LojaComumQuiosque -up-|> Lojas.LojaComum
  Lojas.LojaComumRestauracao .up.|> Lojas.CustoSeguranca
  Lojas.LojaComumRestauracao .down.|> Lojas.Renda
  Lojas.LojaComumRestauracao -up-|> Lojas.LojaComum


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter



@enduml
